// src/controllers/UserController.js
const User = require('../models/userModel');
const ReturnObject = require('../models/ReturnObject');

exports.getAllUsers = async (req, res) => {
  try {
    const Users = await User.findAll();
    res.json(new ReturnObject(statusCode = 200, message = 'Record Found Successfully', data =Users ));
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Internal Server Error' });
  }
};

exports.getUserById = async (req, res) => {
  const UserId = req.params.id;

  try {
    const User = await User.findByPk(UserId);
    if (User) {
      res.json(User);
    } else {
      res.status(404).json({ message: 'User not found' });
    }
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Internal Server Error' });
  }
};

exports.createUser = async (req, res) => {
  const { title, completed } = req.body;

  try {
    const newUser = await User.create({ title, completed });
    res.status(201).json(newUser);
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Internal Server Error' });
  }
};

exports.updateUser = async (req, res) => {
  const UserId = req.params.id;
  const { title, completed } = req.body;

  try {
    const User = await User.findByPk(UserId);

    if (User) {
      User.title = title || User.title;
      User.completed = completed || User.completed;

      await User.save();

      res.json(User);
    } else {
      res.status(404).json({ message: 'User not found' });
    }
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Internal Server Error' });
  }
};

exports.deleteUser = async (req, res) => {
  const UserId = req.params.id;

  try {
    const User = await User.findByPk(UserId);

    if (User) {
      await User.destroy();
      res.json({ message: 'User deleted successfully' });
    } else {
      res.status(404).json({ message: 'User not found' });
    }
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: 'Internal Server Error' });
  }
};
